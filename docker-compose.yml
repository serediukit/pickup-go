version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: pickup-postgres
    environment:
      POSTGRES_DB: pickup_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pickup-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: pickup-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - pickup-network

  redis:
    image: redis:latest
    container_name: pickup-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pickup-network

  pickup-srv:
    build: .
    container_name: pickup-srv
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: pickup_db
      DB_SSLMODE: disable
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      REDIS_HOST: redis
      REDIS_PORT: 6379
      GRPC_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - rabbitmq
      - redis
    networks:
      - pickup-network

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:

networks:
  pickup-network:
    driver: bridge